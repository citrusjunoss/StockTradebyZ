name: Update Market Data Cache

on:
  # 每周一早上6点执行 (UTC时间, 北京时间14:00)
  schedule:
    - cron: '0 6 * * 1'
  
  # 允许手动触发
  workflow_dispatch:
  
  # 每天检查是否需要更新 (UTC时间每天早上2点, 北京时间10:00)
  schedule:
    - cron: '0 2 * * *'

jobs:
  update-cache:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Check cache validity
      id: check-cache
      run: |
        if python data_cache_manager.py --status | grep -q "是否有效: 否"; then
          echo "需要更新缓存"
          echo "need_update=true" >> $GITHUB_OUTPUT
        else
          echo "缓存仍然有效"
          echo "need_update=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Update stock data cache
      if: steps.check-cache.outputs.need_update == 'true' || github.event_name == 'workflow_dispatch'
      run: |
        echo "开始更新股票信息缓存..."
        python data_cache_manager.py --update --max-stocks 1000
        
    - name: Check if cache files changed
      id: check-changes
      run: |
        git add stock_info_cache.json
        if git diff --cached --quiet; then
          echo "没有文件变更"
          echo "has_changes=false" >> $GITHUB_OUTPUT
        else
          echo "检测到缓存文件变更"
          echo "has_changes=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.check-changes.outputs.has_changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add stock_info_cache.json
        git commit -m "chore: 自动更新股票信息缓存 $(date '+%Y-%m-%d %H:%M:%S')"
        git push
        
    - name: Cache status summary
      run: |
        echo "=== 股票信息缓存更新结果 ==="
        python data_cache_manager.py --status